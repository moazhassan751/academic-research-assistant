[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "academic-research-assistant"
version = "2.1.0"
description = "AI-powered multi-agent system for academic research automation"
readme = "README.md"
requires-python = ">=3.12"
license = {text = "MIT"}
authors = [
    {name = "Academic Research Assistant Team"}
]
keywords = ["ai", "research", "academic", "literature-review", "automation"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering",
    "Topic :: Text Processing :: Linguistic",
]

dependencies = [
    "crewai>=0.28.0",
    "google-generativeai>=0.3.0",
    "openai>=1.3.0",
    "arxiv>=1.4.0",
    "requests>=2.31.0",
    "pydantic>=2.0.0",
    "rich>=13.0.0",
    "click>=8.1.0",
    "streamlit>=1.28.0",
    "python-dotenv>=1.0.0",
    "sqlite-utils>=3.35.0",
    "bibtexparser>=1.4.0",
    "httpx>=0.25.0",
    "tenacity>=8.2.0",
    "PyPDF2>=3.0.0",
    "pdfplumber>=0.9.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]

export = [
    "python-docx>=0.8.11",
    "reportlab>=3.6.0",
    "markdown>=3.5.0",
    "jinja2>=3.1.0",
]

performance = [
    "aiofiles>=23.0.0",
    "asyncpg>=0.28.0",
    "uvloop>=0.17.0; sys_platform != 'win32'",
]

[project.urls]
Homepage = "https://github.com/moazhassan751/academic-research-assistant"
Repository = "https://github.com/moazhassan751/academic-research-assistant"
Issues = "https://github.com/moazhassan751/academic-research-assistant/issues"
Documentation = "https://github.com/moazhassan751/academic-research-assistant/blob/main/README.md"

[project.scripts]
research-assistant = "main:main"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-v --tb=short --strict-markers"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]
